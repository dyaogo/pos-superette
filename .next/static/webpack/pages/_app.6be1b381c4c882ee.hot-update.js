"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./src/contexts/AppContext.jsx":
/*!*************************************!*\
  !*** ./src/contexts/AppContext.jsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppProvider: () => (/* binding */ AppProvider),\n/* harmony export */   useApp: () => (/* binding */ useApp)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst AppContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction AppProvider(param) {\n    let { children } = param;\n    _s();\n    const [stores, setStores] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentStore, setCurrentStore] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [productCatalog, setProductCatalog] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [salesHistory, setSalesHistory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [customers, setCustomers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [credits, setCredits] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // NOUVEAU\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [initialized, setInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // NOUVEAU\n    // Initialisation au démarrage - AVEC PROTECTION\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AppProvider.useEffect\": ()=>{\n            if (!initialized) {\n                initializeApp();\n                setInitialized(true);\n            }\n        }\n    }[\"AppProvider.useEffect\"], [\n        initialized\n    ]); // MODIFIÉ\n    const initializeApp = async ()=>{\n        setLoading(true);\n        try {\n            // 1. Charger les magasins\n            const storesRes = await fetch('/api/stores');\n            const storesData = await storesRes.json();\n            setStores(storesData);\n            // 2. Définir le magasin actif\n            let activeStore = null;\n            if (true) {\n                const savedStoreId = localStorage.getItem('currentStoreId');\n                activeStore = savedStoreId ? storesData.find((s)=>s.id === savedStoreId) : storesData[0];\n            } else {}\n            if (activeStore) {\n                setCurrentStore(activeStore);\n            }\n            // 3. Charger les autres données\n            await loadData();\n        } catch (error) {\n            console.error('Erreur initialisation:', error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const loadData = async ()=>{\n        try {\n            // PARALLÉLISER tous les appels au lieu de les faire séquentiellement\n            const [storesRes, productsRes, salesRes, customersRes, creditsRes] = await Promise.all([\n                fetch('/api/stores'),\n                fetch('/api/products'),\n                fetch('/api/sales'),\n                fetch('/api/customers'),\n                fetch('/api/credits')\n            ]);\n            // Traiter les réponses\n            const [storesData, productsData, salesData, customersData, creditsData] = await Promise.all([\n                storesRes.json(),\n                productsRes.json(),\n                salesRes.json(),\n                customersRes.json(),\n                creditsRes.json()\n            ]);\n            // Mettre à jour les états\n            setStores(storesData);\n            // Si currentStore existe, le mettre à jour avec les nouvelles données\n            if (currentStore) {\n                const updatedCurrentStore = storesData.find((s)=>s.id === currentStore.id);\n                if (updatedCurrentStore) {\n                    setCurrentStore(updatedCurrentStore);\n                }\n            }\n            // Trier les produits\n            const sortedProducts = productsData.sort((a, b)=>a.name.localeCompare(b.name));\n            setProductCatalog(sortedProducts);\n            setSalesHistory(salesData);\n            setCustomers(customersData);\n            setCredits(creditsData);\n        } catch (error) {\n            console.error('Erreur chargement données:', error);\n        }\n    };\n    // Changer de magasin - OPTIMISÉ\n    const changeStore = async (store)=>{\n        if ((currentStore === null || currentStore === void 0 ? void 0 : currentStore.id) === store.id) return; // NOUVEAU - Ne rien faire si c'est le même\n        setCurrentStore(store);\n        if (true) {\n            localStorage.setItem('currentStoreId', store.id);\n        }\n        await loadData();\n    };\n    // ✨ NOUVELLES FONCTIONS DE MISE À JOUR OPTIMISTE\n    // Mettre à jour un store sans tout recharger\n    const updateStoreOptimistic = (storeId, updatedData)=>{\n        setStores((prev)=>prev.map((s)=>s.id === storeId ? {\n                    ...s,\n                    ...updatedData\n                } : s));\n        // Si c'est le store actif, le mettre à jour aussi\n        if ((currentStore === null || currentStore === void 0 ? void 0 : currentStore.id) === storeId) {\n            setCurrentStore((prev)=>({\n                    ...prev,\n                    ...updatedData\n                }));\n        }\n    };\n    // Ajouter un store sans tout recharger\n    const addStoreOptimistic = (newStore)=>{\n        setStores((prev)=>[\n                ...prev,\n                newStore\n            ]);\n    };\n    // Supprimer un store sans tout recharger\n    const deleteStoreOptimistic = (storeId)=>{\n        setStores((prev)=>prev.filter((s)=>s.id !== storeId));\n    };\n    // Mettre à jour un produit sans tout recharger\n    const updateProductOptimistic = (productId, updatedData)=>{\n        setProductCatalog((prev)=>prev.map((p)=>p.id === productId ? {\n                    ...p,\n                    ...updatedData\n                } : p).sort((a, b)=>a.name.localeCompare(b.name)));\n    };\n    // Ajouter une vente sans tout recharger\n    const addSaleOptimistic = (newSale)=>{\n        setSalesHistory((prev)=>[\n                newSale,\n                ...prev\n            ]);\n    };\n    // Filtrer par magasin actif\n    const currentStoreProducts = productCatalog.filter((p)=>!currentStore || p.storeId === currentStore.id);\n    const currentStoreSales = salesHistory.filter((s)=>!currentStore || s.storeId === currentStore.id);\n    // Actions produits\n    const addProduct = async (productData)=>{\n        try {\n            const res = await fetch('/api/products', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ...productData,\n                    storeId: currentStore === null || currentStore === void 0 ? void 0 : currentStore.id\n                })\n            });\n            if (res.ok) {\n                await loadData();\n                return {\n                    success: true\n                };\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            console.error('Erreur ajout produit:', error);\n            return {\n                success: false\n            };\n        }\n    };\n    const updateProduct = async (id, productData)=>{\n        try {\n            const res = await fetch(\"/api/products/\".concat(id), {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(productData)\n            });\n            if (res.ok) {\n                await loadData();\n                return {\n                    success: true\n                };\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            return {\n                success: false\n            };\n        }\n    };\n    const deleteProduct = async (id)=>{\n        try {\n            const res = await fetch(\"/api/products/\".concat(id), {\n                method: 'DELETE'\n            });\n            if (res.ok) {\n                await loadData();\n                return {\n                    success: true\n                };\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            return {\n                success: false\n            };\n        }\n    };\n    // Actions clients\n    const addCustomer = async (customerData)=>{\n        try {\n            const res = await fetch('/api/customers', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(customerData)\n            });\n            if (res.ok) {\n                await loadData();\n                return {\n                    success: true\n                };\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            return {\n                success: false\n            };\n        }\n    };\n    const updateCustomer = async (id, customerData)=>{\n        try {\n            const res = await fetch(\"/api/customers/\".concat(id), {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(customerData)\n            });\n            if (res.ok) {\n                await loadData();\n                return {\n                    success: true\n                };\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            return {\n                success: false\n            };\n        }\n    };\n    // NOUVEAU : Enregistrer une vente\n    const recordSale = async (saleData)=>{\n        try {\n            const res = await fetch('/api/sales', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    ...saleData,\n                    storeId: currentStore === null || currentStore === void 0 ? void 0 : currentStore.id\n                })\n            });\n            if (res.ok) {\n                const sale = await res.json(); // RÉCUPÉRER LA VENTE CRÉÉE\n                await loadData();\n                return {\n                    success: true,\n                    sale\n                }; // RETOURNER LA VENTE\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            console.error('Erreur enregistrement vente:', error);\n            return {\n                success: false\n            };\n        }\n    };\n    // Mettre à jour le magasin actif\n    const updateCurrentStore = async (storeData)=>{\n        if (!currentStore) return {\n            success: false\n        };\n        try {\n            const res = await fetch(\"/api/stores/\".concat(currentStore.id), {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(storeData)\n            });\n            if (res.ok) {\n                const updatedStore = await res.json();\n                setCurrentStore(updatedStore);\n                // Mettre à jour aussi dans la liste\n                setStores((prev)=>prev.map((s)=>s.id === updatedStore.id ? updatedStore : s));\n                return {\n                    success: true\n                };\n            }\n            return {\n                success: false\n            };\n        } catch (error) {\n            return {\n                success: false\n            };\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AppContext.Provider, {\n        value: {\n            // Magasins\n            stores,\n            currentStore,\n            changeStore,\n            updateCurrentStore,\n            updateStoreOptimistic,\n            addStoreOptimistic,\n            deleteStoreOptimistic,\n            // Données filtrées par magasin\n            productCatalog: currentStoreProducts,\n            salesHistory: currentStoreSales,\n            customers,\n            credits,\n            // Données complètes (pour admin)\n            allProducts: productCatalog,\n            allSales: salesHistory,\n            // Actions\n            addProduct,\n            updateProduct,\n            deleteProduct,\n            addCustomer,\n            updateCustomer,\n            recordSale,\n            // État\n            loading,\n            reloadData: loadData\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/denisyaogo/Documents/pos-superette/src/contexts/AppContext.jsx\",\n        lineNumber: 300,\n        columnNumber: 5\n    }, this);\n}\n_s(AppProvider, \"IwqlUrmy+cFUQmMuFTgREAHJzKY=\");\n_c = AppProvider;\nfunction useApp() {\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AppContext);\n}\n_s1(useApp, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9jb250ZXh0cy9BcHBDb250ZXh0LmpzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF1RTtBQUV2RSxNQUFNSSwyQkFBYUosb0RBQWFBO0FBRXpCLFNBQVNLLFlBQVksS0FBWTtRQUFaLEVBQUVDLFFBQVEsRUFBRSxHQUFaOztJQUMxQixNQUFNLENBQUNDLFFBQVFDLFVBQVUsR0FBR04sK0NBQVFBLENBQUMsRUFBRTtJQUN2QyxNQUFNLENBQUNPLGNBQWNDLGdCQUFnQixHQUFHUiwrQ0FBUUEsQ0FBQztJQUNqRCxNQUFNLENBQUNTLGdCQUFnQkMsa0JBQWtCLEdBQUdWLCtDQUFRQSxDQUFDLEVBQUU7SUFDdkQsTUFBTSxDQUFDVyxjQUFjQyxnQkFBZ0IsR0FBR1osK0NBQVFBLENBQUMsRUFBRTtJQUNuRCxNQUFNLENBQUNhLFdBQVdDLGFBQWEsR0FBR2QsK0NBQVFBLENBQUMsRUFBRTtJQUM3QyxNQUFNLENBQUNlLFNBQVNDLFdBQVcsR0FBR2hCLCtDQUFRQSxDQUFDLEVBQUUsR0FBRyxVQUFVO0lBQ3RELE1BQU0sQ0FBQ2lCLFNBQVNDLFdBQVcsR0FBR2xCLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQ21CLGFBQWFDLGVBQWUsR0FBR3BCLCtDQUFRQSxDQUFDLFFBQVEsVUFBVTtJQUdqRSxnREFBZ0Q7SUFDaERDLGdEQUFTQTtpQ0FBQztZQUNSLElBQUksQ0FBQ2tCLGFBQWE7Z0JBQ2hCRTtnQkFDQUQsZUFBZTtZQUNqQjtRQUNGO2dDQUFHO1FBQUNEO0tBQVksR0FBRyxVQUFVO0lBRTdCLE1BQU1FLGdCQUFnQjtRQUNwQkgsV0FBVztRQUNYLElBQUk7WUFDRiwwQkFBMEI7WUFDMUIsTUFBTUksWUFBWSxNQUFNQyxNQUFNO1lBQzlCLE1BQU1DLGFBQWEsTUFBTUYsVUFBVUcsSUFBSTtZQUN2Q25CLFVBQVVrQjtZQUVWLDhCQUE4QjtZQUM5QixJQUFJRSxjQUFjO1lBRWxCLElBQUksSUFBNkIsRUFBRTtnQkFDakMsTUFBTUMsZUFBZUMsYUFBYUMsT0FBTyxDQUFDO2dCQUMxQ0gsY0FBY0MsZUFDVkgsV0FBV00sSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxFQUFFLEtBQUtMLGdCQUM5QkgsVUFBVSxDQUFDLEVBQUU7WUFDbkIsT0FBTyxFQUVOO1lBRUQsSUFBSUUsYUFBYTtnQkFDZmxCLGdCQUFnQmtCO1lBQ2xCO1lBRUEsZ0NBQWdDO1lBQ2hDLE1BQU1PO1FBQ1IsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO1FBQzFDLFNBQVU7WUFDUmhCLFdBQVc7UUFDYjtJQUNGO0lBRUYsTUFBTWUsV0FBVztRQUNmLElBQUk7WUFDRixxRUFBcUU7WUFDckUsTUFBTSxDQUFDWCxXQUFXYyxhQUFhQyxVQUFVQyxjQUFjQyxXQUFXLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO2dCQUNyRmxCLE1BQU07Z0JBQ05BLE1BQU07Z0JBQ05BLE1BQU07Z0JBQ05BLE1BQU07Z0JBQ05BLE1BQU07YUFDUDtZQUVELHVCQUF1QjtZQUN2QixNQUFNLENBQUNDLFlBQVlrQixjQUFjQyxXQUFXQyxlQUFlQyxZQUFZLEdBQUcsTUFBTUwsUUFBUUMsR0FBRyxDQUFDO2dCQUMxRm5CLFVBQVVHLElBQUk7Z0JBQ2RXLFlBQVlYLElBQUk7Z0JBQ2hCWSxTQUFTWixJQUFJO2dCQUNiYSxhQUFhYixJQUFJO2dCQUNqQmMsV0FBV2QsSUFBSTthQUNoQjtZQUVELDBCQUEwQjtZQUMxQm5CLFVBQVVrQjtZQUVWLHNFQUFzRTtZQUN0RSxJQUFJakIsY0FBYztnQkFDaEIsTUFBTXVDLHNCQUFzQnRCLFdBQVdNLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsRUFBRSxLQUFLekIsYUFBYXlCLEVBQUU7Z0JBQ3pFLElBQUljLHFCQUFxQjtvQkFDdkJ0QyxnQkFBZ0JzQztnQkFDbEI7WUFDRjtZQUVBLHFCQUFxQjtZQUNyQixNQUFNQyxpQkFBaUJMLGFBQWFNLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUMzQ0QsRUFBRUUsSUFBSSxDQUFDQyxhQUFhLENBQUNGLEVBQUVDLElBQUk7WUFHN0J6QyxrQkFBa0JxQztZQUNsQm5DLGdCQUFnQitCO1lBQ2hCN0IsYUFBYThCO1lBQ2I1QixXQUFXNkI7UUFDYixFQUFFLE9BQU9YLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDhCQUE4QkE7UUFDOUM7SUFDRjtJQUNFLGdDQUFnQztJQUNsQyxNQUFNbUIsY0FBYyxPQUFPQztRQUN6QixJQUFJL0MsQ0FBQUEseUJBQUFBLG1DQUFBQSxhQUFjeUIsRUFBRSxNQUFLc0IsTUFBTXRCLEVBQUUsRUFBRSxRQUFRLDJDQUEyQztRQUV0RnhCLGdCQUFnQjhDO1FBQ2hCLElBQUksSUFBNkIsRUFBRTtZQUNqQzFCLGFBQWEyQixPQUFPLENBQUMsa0JBQWtCRCxNQUFNdEIsRUFBRTtRQUNqRDtRQUNBLE1BQU1DO0lBQ1I7SUFDQSxpREFBaUQ7SUFFakQsNkNBQTZDO0lBQzdDLE1BQU11Qix3QkFBd0IsQ0FBQ0MsU0FBU0M7UUFDdENwRCxVQUFVcUQsQ0FBQUEsT0FBUUEsS0FBS0MsR0FBRyxDQUFDN0IsQ0FBQUEsSUFDekJBLEVBQUVDLEVBQUUsS0FBS3lCLFVBQVU7b0JBQUUsR0FBRzFCLENBQUM7b0JBQUUsR0FBRzJCLFdBQVc7Z0JBQUMsSUFBSTNCO1FBR2hELGtEQUFrRDtRQUNsRCxJQUFJeEIsQ0FBQUEseUJBQUFBLG1DQUFBQSxhQUFjeUIsRUFBRSxNQUFLeUIsU0FBUztZQUNoQ2pELGdCQUFnQm1ELENBQUFBLE9BQVM7b0JBQUUsR0FBR0EsSUFBSTtvQkFBRSxHQUFHRCxXQUFXO2dCQUFDO1FBQ3JEO0lBQ0Y7SUFFQSx1Q0FBdUM7SUFDdkMsTUFBTUcscUJBQXFCLENBQUNDO1FBQzFCeEQsVUFBVXFELENBQUFBLE9BQVE7bUJBQUlBO2dCQUFNRzthQUFTO0lBQ3ZDO0lBRUEseUNBQXlDO0lBQ3pDLE1BQU1DLHdCQUF3QixDQUFDTjtRQUM3Qm5ELFVBQVVxRCxDQUFBQSxPQUFRQSxLQUFLSyxNQUFNLENBQUNqQyxDQUFBQSxJQUFLQSxFQUFFQyxFQUFFLEtBQUt5QjtJQUM5QztJQUVBLCtDQUErQztJQUMvQyxNQUFNUSwwQkFBMEIsQ0FBQ0MsV0FBV1I7UUFDMUNoRCxrQkFBa0JpRCxDQUFBQSxPQUFRQSxLQUFLQyxHQUFHLENBQUNPLENBQUFBLElBQ2pDQSxFQUFFbkMsRUFBRSxLQUFLa0MsWUFBWTtvQkFBRSxHQUFHQyxDQUFDO29CQUFFLEdBQUdULFdBQVc7Z0JBQUMsSUFBSVMsR0FDaERuQixJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUQsRUFBRUUsSUFBSSxDQUFDQyxhQUFhLENBQUNGLEVBQUVDLElBQUk7SUFDOUM7SUFFQSx3Q0FBd0M7SUFDeEMsTUFBTWlCLG9CQUFvQixDQUFDQztRQUN6QnpELGdCQUFnQitDLENBQUFBLE9BQVE7Z0JBQUNVO21CQUFZVjthQUFLO0lBQzVDO0lBRUUsNEJBQTRCO0lBQzVCLE1BQU1XLHVCQUF1QjdELGVBQWV1RCxNQUFNLENBQ2hERyxDQUFBQSxJQUFLLENBQUM1RCxnQkFBZ0I0RCxFQUFFVixPQUFPLEtBQUtsRCxhQUFheUIsRUFBRTtJQUdyRCxNQUFNdUMsb0JBQW9CNUQsYUFBYXFELE1BQU0sQ0FDM0NqQyxDQUFBQSxJQUFLLENBQUN4QixnQkFBZ0J3QixFQUFFMEIsT0FBTyxLQUFLbEQsYUFBYXlCLEVBQUU7SUFHckQsbUJBQW1CO0lBQ25CLE1BQU13QyxhQUFhLE9BQU9DO1FBQ3hCLElBQUk7WUFDRixNQUFNQyxNQUFNLE1BQU1uRCxNQUFNLGlCQUFpQjtnQkFDdkNvRCxRQUFRO2dCQUNSQyxTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7Z0JBQzlDQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7b0JBQ25CLEdBQUdOLFdBQVc7b0JBQ2RoQixPQUFPLEVBQUVsRCx5QkFBQUEsbUNBQUFBLGFBQWN5QixFQUFFO2dCQUMzQjtZQUNGO1lBRUEsSUFBSTBDLElBQUlNLEVBQUUsRUFBRTtnQkFDVixNQUFNL0M7Z0JBQ04sT0FBTztvQkFBRWdELFNBQVM7Z0JBQUs7WUFDekI7WUFDQSxPQUFPO2dCQUFFQSxTQUFTO1lBQU07UUFDMUIsRUFBRSxPQUFPL0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtZQUN2QyxPQUFPO2dCQUFFK0MsU0FBUztZQUFNO1FBQzFCO0lBQ0Y7SUFFQSxNQUFNQyxnQkFBZ0IsT0FBT2xELElBQUl5QztRQUMvQixJQUFJO1lBQ0YsTUFBTUMsTUFBTSxNQUFNbkQsTUFBTSxpQkFBb0IsT0FBSFMsS0FBTTtnQkFDN0MyQyxRQUFRO2dCQUNSQyxTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7Z0JBQzlDQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNOO1lBQ3ZCO1lBRUEsSUFBSUMsSUFBSU0sRUFBRSxFQUFFO2dCQUNWLE1BQU0vQztnQkFDTixPQUFPO29CQUFFZ0QsU0FBUztnQkFBSztZQUN6QjtZQUNBLE9BQU87Z0JBQUVBLFNBQVM7WUFBTTtRQUMxQixFQUFFLE9BQU8vQyxPQUFPO1lBQ2QsT0FBTztnQkFBRStDLFNBQVM7WUFBTTtRQUMxQjtJQUNGO0lBRUEsTUFBTUUsZ0JBQWdCLE9BQU9uRDtRQUMzQixJQUFJO1lBQ0YsTUFBTTBDLE1BQU0sTUFBTW5ELE1BQU0saUJBQW9CLE9BQUhTLEtBQU07Z0JBQUUyQyxRQUFRO1lBQVM7WUFDbEUsSUFBSUQsSUFBSU0sRUFBRSxFQUFFO2dCQUNWLE1BQU0vQztnQkFDTixPQUFPO29CQUFFZ0QsU0FBUztnQkFBSztZQUN6QjtZQUNBLE9BQU87Z0JBQUVBLFNBQVM7WUFBTTtRQUMxQixFQUFFLE9BQU8vQyxPQUFPO1lBQ2QsT0FBTztnQkFBRStDLFNBQVM7WUFBTTtRQUMxQjtJQUNGO0lBRUEsa0JBQWtCO0lBQ2xCLE1BQU1HLGNBQWMsT0FBT0M7UUFDekIsSUFBSTtZQUNGLE1BQU1YLE1BQU0sTUFBTW5ELE1BQU0sa0JBQWtCO2dCQUN4Q29ELFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQUUsZ0JBQWdCO2dCQUFtQjtnQkFDOUNDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ007WUFDdkI7WUFFQSxJQUFJWCxJQUFJTSxFQUFFLEVBQUU7Z0JBQ1YsTUFBTS9DO2dCQUNOLE9BQU87b0JBQUVnRCxTQUFTO2dCQUFLO1lBQ3pCO1lBQ0EsT0FBTztnQkFBRUEsU0FBUztZQUFNO1FBQzFCLEVBQUUsT0FBTy9DLE9BQU87WUFDZCxPQUFPO2dCQUFFK0MsU0FBUztZQUFNO1FBQzFCO0lBQ0Y7SUFFQSxNQUFNSyxpQkFBaUIsT0FBT3RELElBQUlxRDtRQUNoQyxJQUFJO1lBQ0YsTUFBTVgsTUFBTSxNQUFNbkQsTUFBTSxrQkFBcUIsT0FBSFMsS0FBTTtnQkFDOUMyQyxRQUFRO2dCQUNSQyxTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7Z0JBQzlDQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNNO1lBQ3ZCO1lBRUEsSUFBSVgsSUFBSU0sRUFBRSxFQUFFO2dCQUNWLE1BQU0vQztnQkFDTixPQUFPO29CQUFFZ0QsU0FBUztnQkFBSztZQUN6QjtZQUNBLE9BQU87Z0JBQUVBLFNBQVM7WUFBTTtRQUMxQixFQUFFLE9BQU8vQyxPQUFPO1lBQ2QsT0FBTztnQkFBRStDLFNBQVM7WUFBTTtRQUMxQjtJQUNGO0lBRUYsa0NBQWtDO0lBQ2xDLE1BQU1NLGFBQWEsT0FBT0M7UUFDeEIsSUFBSTtZQUNGLE1BQU1kLE1BQU0sTUFBTW5ELE1BQU0sY0FBYztnQkFDcENvRCxRQUFRO2dCQUNSQyxTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7Z0JBQzlDQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7b0JBQ25CLEdBQUdTLFFBQVE7b0JBQ1gvQixPQUFPLEVBQUVsRCx5QkFBQUEsbUNBQUFBLGFBQWN5QixFQUFFO2dCQUMzQjtZQUNGO1lBRUEsSUFBSTBDLElBQUlNLEVBQUUsRUFBRTtnQkFDVixNQUFNUyxPQUFPLE1BQU1mLElBQUlqRCxJQUFJLElBQUksMkJBQTJCO2dCQUMxRCxNQUFNUTtnQkFDTixPQUFPO29CQUFFZ0QsU0FBUztvQkFBTVE7Z0JBQUssR0FBRyxxQkFBcUI7WUFDdkQ7WUFDQSxPQUFPO2dCQUFFUixTQUFTO1lBQU07UUFDMUIsRUFBRSxPQUFPL0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsZ0NBQWdDQTtZQUM5QyxPQUFPO2dCQUFFK0MsU0FBUztZQUFNO1FBQzFCO0lBQ0Y7SUFFRSxpQ0FBaUM7SUFDakMsTUFBTVMscUJBQXFCLE9BQU9DO1FBQ2hDLElBQUksQ0FBQ3BGLGNBQWMsT0FBTztZQUFFMEUsU0FBUztRQUFNO1FBRTNDLElBQUk7WUFDRixNQUFNUCxNQUFNLE1BQU1uRCxNQUFNLGVBQStCLE9BQWhCaEIsYUFBYXlCLEVBQUUsR0FBSTtnQkFDeEQyQyxRQUFRO2dCQUNSQyxTQUFTO29CQUFFLGdCQUFnQjtnQkFBbUI7Z0JBQzlDQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNZO1lBQ3ZCO1lBRUEsSUFBSWpCLElBQUlNLEVBQUUsRUFBRTtnQkFDVixNQUFNWSxlQUFlLE1BQU1sQixJQUFJakQsSUFBSTtnQkFDbkNqQixnQkFBZ0JvRjtnQkFFaEIsb0NBQW9DO2dCQUNwQ3RGLFVBQVVxRCxDQUFBQSxPQUFRQSxLQUFLQyxHQUFHLENBQUM3QixDQUFBQSxJQUN6QkEsRUFBRUMsRUFBRSxLQUFLNEQsYUFBYTVELEVBQUUsR0FBRzRELGVBQWU3RDtnQkFHNUMsT0FBTztvQkFBRWtELFNBQVM7Z0JBQUs7WUFDekI7WUFDQSxPQUFPO2dCQUFFQSxTQUFTO1lBQU07UUFDMUIsRUFBRSxPQUFPL0MsT0FBTztZQUNkLE9BQU87Z0JBQUUrQyxTQUFTO1lBQU07UUFDMUI7SUFDRjtJQUVBLHFCQUNFLDhEQUFDL0UsV0FBVzJGLFFBQVE7UUFDbEJDLE9BQU87WUFDTCxXQUFXO1lBQ1h6RjtZQUNBRTtZQUNBOEM7WUFDQXFDO1lBQ0FsQztZQUNGSztZQUNBRTtZQUVFLCtCQUErQjtZQUMvQnRELGdCQUFnQjZEO1lBQ2hCM0QsY0FBYzREO1lBQ2QxRDtZQUNBRTtZQUdBLGlDQUFpQztZQUNqQ2dGLGFBQWF0RjtZQUNidUYsVUFBVXJGO1lBRVYsVUFBVTtZQUNWNkQ7WUFDQVU7WUFDQUM7WUFDQUM7WUFDQUU7WUFDQUM7WUFHQSxPQUFPO1lBQ1B0RTtZQUNBZ0YsWUFBWWhFO1FBQ2Q7a0JBRUM3Qjs7Ozs7O0FBR1A7R0E5VWdCRDtLQUFBQTtBQWdWVCxTQUFTK0Y7O0lBQ2QsT0FBT25HLGlEQUFVQSxDQUFDRztBQUNwQjtJQUZnQmdHIiwic291cmNlcyI6WyIvVXNlcnMvZGVuaXN5YW9nby9Eb2N1bWVudHMvcG9zLXN1cGVyZXR0ZS9zcmMvY29udGV4dHMvQXBwQ29udGV4dC5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgQXBwQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIEFwcFByb3ZpZGVyKHsgY2hpbGRyZW4gfSkge1xuICBjb25zdCBbc3RvcmVzLCBzZXRTdG9yZXNdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbY3VycmVudFN0b3JlLCBzZXRDdXJyZW50U3RvcmVdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFtwcm9kdWN0Q2F0YWxvZywgc2V0UHJvZHVjdENhdGFsb2ddID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbc2FsZXNIaXN0b3J5LCBzZXRTYWxlc0hpc3RvcnldID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbY3VzdG9tZXJzLCBzZXRDdXN0b21lcnNdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbY3JlZGl0cywgc2V0Q3JlZGl0c10gPSB1c2VTdGF0ZShbXSk7IC8vIE5PVVZFQVVcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtpbml0aWFsaXplZCwgc2V0SW5pdGlhbGl6ZWRdID0gdXNlU3RhdGUoZmFsc2UpOyAvLyBOT1VWRUFVXG5cblxuICAvLyBJbml0aWFsaXNhdGlvbiBhdSBkw6ltYXJyYWdlIC0gQVZFQyBQUk9URUNUSU9OXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpbml0aWFsaXplZCkge1xuICAgICAgaW5pdGlhbGl6ZUFwcCgpO1xuICAgICAgc2V0SW5pdGlhbGl6ZWQodHJ1ZSk7XG4gICAgfVxuICB9LCBbaW5pdGlhbGl6ZWRdKTsgLy8gTU9ESUZJw4lcblxuICBjb25zdCBpbml0aWFsaXplQXBwID0gYXN5bmMgKCkgPT4ge1xuICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgdHJ5IHtcbiAgICAgIC8vIDEuIENoYXJnZXIgbGVzIG1hZ2FzaW5zXG4gICAgICBjb25zdCBzdG9yZXNSZXMgPSBhd2FpdCBmZXRjaCgnL2FwaS9zdG9yZXMnKTtcbiAgICAgIGNvbnN0IHN0b3Jlc0RhdGEgPSBhd2FpdCBzdG9yZXNSZXMuanNvbigpO1xuICAgICAgc2V0U3RvcmVzKHN0b3Jlc0RhdGEpO1xuXG4gICAgICAvLyAyLiBEw6lmaW5pciBsZSBtYWdhc2luIGFjdGlmXG4gICAgICBsZXQgYWN0aXZlU3RvcmUgPSBudWxsO1xuICAgICAgXG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc3Qgc2F2ZWRTdG9yZUlkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2N1cnJlbnRTdG9yZUlkJyk7XG4gICAgICAgIGFjdGl2ZVN0b3JlID0gc2F2ZWRTdG9yZUlkIFxuICAgICAgICAgID8gc3RvcmVzRGF0YS5maW5kKHMgPT4gcy5pZCA9PT0gc2F2ZWRTdG9yZUlkKSBcbiAgICAgICAgICA6IHN0b3Jlc0RhdGFbMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhY3RpdmVTdG9yZSA9IHN0b3Jlc0RhdGFbMF07XG4gICAgICB9XG5cbiAgICAgIGlmIChhY3RpdmVTdG9yZSkge1xuICAgICAgICBzZXRDdXJyZW50U3RvcmUoYWN0aXZlU3RvcmUpO1xuICAgICAgfVxuXG4gICAgICAvLyAzLiBDaGFyZ2VyIGxlcyBhdXRyZXMgZG9ubsOpZXNcbiAgICAgIGF3YWl0IGxvYWREYXRhKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciBpbml0aWFsaXNhdGlvbjonLCBlcnJvcik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuY29uc3QgbG9hZERhdGEgPSBhc3luYyAoKSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gUEFSQUxMw4lMSVNFUiB0b3VzIGxlcyBhcHBlbHMgYXUgbGlldSBkZSBsZXMgZmFpcmUgc8OpcXVlbnRpZWxsZW1lbnRcbiAgICBjb25zdCBbc3RvcmVzUmVzLCBwcm9kdWN0c1Jlcywgc2FsZXNSZXMsIGN1c3RvbWVyc1JlcywgY3JlZGl0c1Jlc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICBmZXRjaCgnL2FwaS9zdG9yZXMnKSxcbiAgICAgIGZldGNoKCcvYXBpL3Byb2R1Y3RzJyksXG4gICAgICBmZXRjaCgnL2FwaS9zYWxlcycpLFxuICAgICAgZmV0Y2goJy9hcGkvY3VzdG9tZXJzJyksXG4gICAgICBmZXRjaCgnL2FwaS9jcmVkaXRzJylcbiAgICBdKTtcbiAgICBcbiAgICAvLyBUcmFpdGVyIGxlcyByw6lwb25zZXNcbiAgICBjb25zdCBbc3RvcmVzRGF0YSwgcHJvZHVjdHNEYXRhLCBzYWxlc0RhdGEsIGN1c3RvbWVyc0RhdGEsIGNyZWRpdHNEYXRhXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIHN0b3Jlc1Jlcy5qc29uKCksXG4gICAgICBwcm9kdWN0c1Jlcy5qc29uKCksXG4gICAgICBzYWxlc1Jlcy5qc29uKCksXG4gICAgICBjdXN0b21lcnNSZXMuanNvbigpLFxuICAgICAgY3JlZGl0c1Jlcy5qc29uKClcbiAgICBdKTtcbiAgICBcbiAgICAvLyBNZXR0cmUgw6Agam91ciBsZXMgw6l0YXRzXG4gICAgc2V0U3RvcmVzKHN0b3Jlc0RhdGEpO1xuICAgIFxuICAgIC8vIFNpIGN1cnJlbnRTdG9yZSBleGlzdGUsIGxlIG1ldHRyZSDDoCBqb3VyIGF2ZWMgbGVzIG5vdXZlbGxlcyBkb25uw6llc1xuICAgIGlmIChjdXJyZW50U3RvcmUpIHtcbiAgICAgIGNvbnN0IHVwZGF0ZWRDdXJyZW50U3RvcmUgPSBzdG9yZXNEYXRhLmZpbmQocyA9PiBzLmlkID09PSBjdXJyZW50U3RvcmUuaWQpO1xuICAgICAgaWYgKHVwZGF0ZWRDdXJyZW50U3RvcmUpIHtcbiAgICAgICAgc2V0Q3VycmVudFN0b3JlKHVwZGF0ZWRDdXJyZW50U3RvcmUpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBUcmllciBsZXMgcHJvZHVpdHNcbiAgICBjb25zdCBzb3J0ZWRQcm9kdWN0cyA9IHByb2R1Y3RzRGF0YS5zb3J0KChhLCBiKSA9PiBcbiAgICAgIGEubmFtZS5sb2NhbGVDb21wYXJlKGIubmFtZSlcbiAgICApO1xuICAgIFxuICAgIHNldFByb2R1Y3RDYXRhbG9nKHNvcnRlZFByb2R1Y3RzKTtcbiAgICBzZXRTYWxlc0hpc3Rvcnkoc2FsZXNEYXRhKTtcbiAgICBzZXRDdXN0b21lcnMoY3VzdG9tZXJzRGF0YSk7XG4gICAgc2V0Q3JlZGl0cyhjcmVkaXRzRGF0YSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyZXVyIGNoYXJnZW1lbnQgZG9ubsOpZXM6JywgZXJyb3IpO1xuICB9XG59O1xuICAvLyBDaGFuZ2VyIGRlIG1hZ2FzaW4gLSBPUFRJTUlTw4lcbmNvbnN0IGNoYW5nZVN0b3JlID0gYXN5bmMgKHN0b3JlKSA9PiB7XG4gIGlmIChjdXJyZW50U3RvcmU/LmlkID09PSBzdG9yZS5pZCkgcmV0dXJuOyAvLyBOT1VWRUFVIC0gTmUgcmllbiBmYWlyZSBzaSBjJ2VzdCBsZSBtw6ptZVxuICBcbiAgc2V0Q3VycmVudFN0b3JlKHN0b3JlKTtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRTdG9yZUlkJywgc3RvcmUuaWQpO1xuICB9XG4gIGF3YWl0IGxvYWREYXRhKCk7XG59O1xuLy8g4pyoIE5PVVZFTExFUyBGT05DVElPTlMgREUgTUlTRSDDgCBKT1VSIE9QVElNSVNURVxuXG4vLyBNZXR0cmUgw6Agam91ciB1biBzdG9yZSBzYW5zIHRvdXQgcmVjaGFyZ2VyXG5jb25zdCB1cGRhdGVTdG9yZU9wdGltaXN0aWMgPSAoc3RvcmVJZCwgdXBkYXRlZERhdGEpID0+IHtcbiAgc2V0U3RvcmVzKHByZXYgPT4gcHJldi5tYXAocyA9PiBcbiAgICBzLmlkID09PSBzdG9yZUlkID8geyAuLi5zLCAuLi51cGRhdGVkRGF0YSB9IDogc1xuICApKTtcbiAgXG4gIC8vIFNpIGMnZXN0IGxlIHN0b3JlIGFjdGlmLCBsZSBtZXR0cmUgw6Agam91ciBhdXNzaVxuICBpZiAoY3VycmVudFN0b3JlPy5pZCA9PT0gc3RvcmVJZCkge1xuICAgIHNldEN1cnJlbnRTdG9yZShwcmV2ID0+ICh7IC4uLnByZXYsIC4uLnVwZGF0ZWREYXRhIH0pKTtcbiAgfVxufTtcblxuLy8gQWpvdXRlciB1biBzdG9yZSBzYW5zIHRvdXQgcmVjaGFyZ2VyXG5jb25zdCBhZGRTdG9yZU9wdGltaXN0aWMgPSAobmV3U3RvcmUpID0+IHtcbiAgc2V0U3RvcmVzKHByZXYgPT4gWy4uLnByZXYsIG5ld1N0b3JlXSk7XG59O1xuXG4vLyBTdXBwcmltZXIgdW4gc3RvcmUgc2FucyB0b3V0IHJlY2hhcmdlclxuY29uc3QgZGVsZXRlU3RvcmVPcHRpbWlzdGljID0gKHN0b3JlSWQpID0+IHtcbiAgc2V0U3RvcmVzKHByZXYgPT4gcHJldi5maWx0ZXIocyA9PiBzLmlkICE9PSBzdG9yZUlkKSk7XG59O1xuXG4vLyBNZXR0cmUgw6Agam91ciB1biBwcm9kdWl0IHNhbnMgdG91dCByZWNoYXJnZXJcbmNvbnN0IHVwZGF0ZVByb2R1Y3RPcHRpbWlzdGljID0gKHByb2R1Y3RJZCwgdXBkYXRlZERhdGEpID0+IHtcbiAgc2V0UHJvZHVjdENhdGFsb2cocHJldiA9PiBwcmV2Lm1hcChwID0+IFxuICAgIHAuaWQgPT09IHByb2R1Y3RJZCA/IHsgLi4ucCwgLi4udXBkYXRlZERhdGEgfSA6IHBcbiAgKS5zb3J0KChhLCBiKSA9PiBhLm5hbWUubG9jYWxlQ29tcGFyZShiLm5hbWUpKSk7XG59O1xuXG4vLyBBam91dGVyIHVuZSB2ZW50ZSBzYW5zIHRvdXQgcmVjaGFyZ2VyXG5jb25zdCBhZGRTYWxlT3B0aW1pc3RpYyA9IChuZXdTYWxlKSA9PiB7XG4gIHNldFNhbGVzSGlzdG9yeShwcmV2ID0+IFtuZXdTYWxlLCAuLi5wcmV2XSk7XG59O1xuXG4gIC8vIEZpbHRyZXIgcGFyIG1hZ2FzaW4gYWN0aWZcbiAgY29uc3QgY3VycmVudFN0b3JlUHJvZHVjdHMgPSBwcm9kdWN0Q2F0YWxvZy5maWx0ZXIoXG4gICAgcCA9PiAhY3VycmVudFN0b3JlIHx8IHAuc3RvcmVJZCA9PT0gY3VycmVudFN0b3JlLmlkXG4gICk7XG5cbiAgY29uc3QgY3VycmVudFN0b3JlU2FsZXMgPSBzYWxlc0hpc3RvcnkuZmlsdGVyKFxuICAgIHMgPT4gIWN1cnJlbnRTdG9yZSB8fCBzLnN0b3JlSWQgPT09IGN1cnJlbnRTdG9yZS5pZFxuICApO1xuXG4gIC8vIEFjdGlvbnMgcHJvZHVpdHNcbiAgY29uc3QgYWRkUHJvZHVjdCA9IGFzeW5jIChwcm9kdWN0RGF0YSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnL2FwaS9wcm9kdWN0cycsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgLi4ucHJvZHVjdERhdGEsXG4gICAgICAgICAgc3RvcmVJZDogY3VycmVudFN0b3JlPy5pZFxuICAgICAgICB9KVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgYXdhaXQgbG9hZERhdGEoKTtcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyZXVyIGFqb3V0IHByb2R1aXQ6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UgfTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgdXBkYXRlUHJvZHVjdCA9IGFzeW5jIChpZCwgcHJvZHVjdERhdGEpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYC9hcGkvcHJvZHVjdHMvJHtpZH1gLCB7XG4gICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwcm9kdWN0RGF0YSlcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIGF3YWl0IGxvYWREYXRhKCk7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGRlbGV0ZVByb2R1Y3QgPSBhc3luYyAoaWQpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYC9hcGkvcHJvZHVjdHMvJHtpZH1gLCB7IG1ldGhvZDogJ0RFTEVURScgfSk7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIGF3YWl0IGxvYWREYXRhKCk7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfVxuICB9O1xuXG4gIC8vIEFjdGlvbnMgY2xpZW50c1xuICBjb25zdCBhZGRDdXN0b21lciA9IGFzeW5jIChjdXN0b21lckRhdGEpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJy9hcGkvY3VzdG9tZXJzJywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGN1c3RvbWVyRGF0YSlcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIGF3YWl0IGxvYWREYXRhKCk7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZUN1c3RvbWVyID0gYXN5bmMgKGlkLCBjdXN0b21lckRhdGEpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYC9hcGkvY3VzdG9tZXJzLyR7aWR9YCwge1xuICAgICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoY3VzdG9tZXJEYXRhKVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgYXdhaXQgbG9hZERhdGEoKTtcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UgfTtcbiAgICB9XG4gIH07XG5cbi8vIE5PVVZFQVUgOiBFbnJlZ2lzdHJlciB1bmUgdmVudGVcbmNvbnN0IHJlY29yZFNhbGUgPSBhc3luYyAoc2FsZURhdGEpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnL2FwaS9zYWxlcycsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIC4uLnNhbGVEYXRhLFxuICAgICAgICBzdG9yZUlkOiBjdXJyZW50U3RvcmU/LmlkXG4gICAgICB9KVxuICAgIH0pO1xuXG4gICAgaWYgKHJlcy5vaykge1xuICAgICAgY29uc3Qgc2FsZSA9IGF3YWl0IHJlcy5qc29uKCk7IC8vIFLDiUNVUMOJUkVSIExBIFZFTlRFIENSw4nDiUVcbiAgICAgIGF3YWl0IGxvYWREYXRhKCk7XG4gICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBzYWxlIH07IC8vIFJFVE9VUk5FUiBMQSBWRU5URVxuICAgIH1cbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciBlbnJlZ2lzdHJlbWVudCB2ZW50ZTonLCBlcnJvcik7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UgfTtcbiAgfVxufTtcblxuICAvLyBNZXR0cmUgw6Agam91ciBsZSBtYWdhc2luIGFjdGlmXG4gIGNvbnN0IHVwZGF0ZUN1cnJlbnRTdG9yZSA9IGFzeW5jIChzdG9yZURhdGEpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRTdG9yZSkgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UgfTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgL2FwaS9zdG9yZXMvJHtjdXJyZW50U3RvcmUuaWR9YCwge1xuICAgICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoc3RvcmVEYXRhKVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgY29uc3QgdXBkYXRlZFN0b3JlID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgc2V0Q3VycmVudFN0b3JlKHVwZGF0ZWRTdG9yZSk7XG4gICAgICAgIFxuICAgICAgICAvLyBNZXR0cmUgw6Agam91ciBhdXNzaSBkYW5zIGxhIGxpc3RlXG4gICAgICAgIHNldFN0b3JlcyhwcmV2ID0+IHByZXYubWFwKHMgPT4gXG4gICAgICAgICAgcy5pZCA9PT0gdXBkYXRlZFN0b3JlLmlkID8gdXBkYXRlZFN0b3JlIDogc1xuICAgICAgICApKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlIH07XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEFwcENvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7XG4gICAgICAgIC8vIE1hZ2FzaW5zXG4gICAgICAgIHN0b3JlcyxcbiAgICAgICAgY3VycmVudFN0b3JlLFxuICAgICAgICBjaGFuZ2VTdG9yZSxcbiAgICAgICAgdXBkYXRlQ3VycmVudFN0b3JlLFxuICAgICAgICB1cGRhdGVTdG9yZU9wdGltaXN0aWMsICAgICAgLy8g4pyoIE5PVVZFQVVcbiAgICAgIGFkZFN0b3JlT3B0aW1pc3RpYywgICAgICAgICAvLyDinKggTk9VVkVBVVxuICAgICAgZGVsZXRlU3RvcmVPcHRpbWlzdGljLCAgICAgIC8vIOKcqCBOT1VWRUFVXG5cbiAgICAgICAgLy8gRG9ubsOpZXMgZmlsdHLDqWVzIHBhciBtYWdhc2luXG4gICAgICAgIHByb2R1Y3RDYXRhbG9nOiBjdXJyZW50U3RvcmVQcm9kdWN0cyxcbiAgICAgICAgc2FsZXNIaXN0b3J5OiBjdXJyZW50U3RvcmVTYWxlcyxcbiAgICAgICAgY3VzdG9tZXJzLFxuICAgICAgICBjcmVkaXRzLCAvLyBOT1VWRUFVXG5cblxuICAgICAgICAvLyBEb25uw6llcyBjb21wbMOodGVzIChwb3VyIGFkbWluKVxuICAgICAgICBhbGxQcm9kdWN0czogcHJvZHVjdENhdGFsb2csXG4gICAgICAgIGFsbFNhbGVzOiBzYWxlc0hpc3RvcnksXG5cbiAgICAgICAgLy8gQWN0aW9uc1xuICAgICAgICBhZGRQcm9kdWN0LFxuICAgICAgICB1cGRhdGVQcm9kdWN0LFxuICAgICAgICBkZWxldGVQcm9kdWN0LFxuICAgICAgICBhZGRDdXN0b21lcixcbiAgICAgICAgdXBkYXRlQ3VzdG9tZXIsXG4gICAgICAgIHJlY29yZFNhbGUsICAvLyBBSk9VVEVaIENFVFRFIExJR05FXG5cblxuICAgICAgICAvLyDDiXRhdFxuICAgICAgICBsb2FkaW5nLFxuICAgICAgICByZWxvYWREYXRhOiBsb2FkRGF0YVxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BcHBDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXBwKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChBcHBDb250ZXh0KTtcbn0iXSwibmFtZXMiOlsiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkFwcENvbnRleHQiLCJBcHBQcm92aWRlciIsImNoaWxkcmVuIiwic3RvcmVzIiwic2V0U3RvcmVzIiwiY3VycmVudFN0b3JlIiwic2V0Q3VycmVudFN0b3JlIiwicHJvZHVjdENhdGFsb2ciLCJzZXRQcm9kdWN0Q2F0YWxvZyIsInNhbGVzSGlzdG9yeSIsInNldFNhbGVzSGlzdG9yeSIsImN1c3RvbWVycyIsInNldEN1c3RvbWVycyIsImNyZWRpdHMiLCJzZXRDcmVkaXRzIiwibG9hZGluZyIsInNldExvYWRpbmciLCJpbml0aWFsaXplZCIsInNldEluaXRpYWxpemVkIiwiaW5pdGlhbGl6ZUFwcCIsInN0b3Jlc1JlcyIsImZldGNoIiwic3RvcmVzRGF0YSIsImpzb24iLCJhY3RpdmVTdG9yZSIsInNhdmVkU3RvcmVJZCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJmaW5kIiwicyIsImlkIiwibG9hZERhdGEiLCJlcnJvciIsImNvbnNvbGUiLCJwcm9kdWN0c1JlcyIsInNhbGVzUmVzIiwiY3VzdG9tZXJzUmVzIiwiY3JlZGl0c1JlcyIsIlByb21pc2UiLCJhbGwiLCJwcm9kdWN0c0RhdGEiLCJzYWxlc0RhdGEiLCJjdXN0b21lcnNEYXRhIiwiY3JlZGl0c0RhdGEiLCJ1cGRhdGVkQ3VycmVudFN0b3JlIiwic29ydGVkUHJvZHVjdHMiLCJzb3J0IiwiYSIsImIiLCJuYW1lIiwibG9jYWxlQ29tcGFyZSIsImNoYW5nZVN0b3JlIiwic3RvcmUiLCJzZXRJdGVtIiwidXBkYXRlU3RvcmVPcHRpbWlzdGljIiwic3RvcmVJZCIsInVwZGF0ZWREYXRhIiwicHJldiIsIm1hcCIsImFkZFN0b3JlT3B0aW1pc3RpYyIsIm5ld1N0b3JlIiwiZGVsZXRlU3RvcmVPcHRpbWlzdGljIiwiZmlsdGVyIiwidXBkYXRlUHJvZHVjdE9wdGltaXN0aWMiLCJwcm9kdWN0SWQiLCJwIiwiYWRkU2FsZU9wdGltaXN0aWMiLCJuZXdTYWxlIiwiY3VycmVudFN0b3JlUHJvZHVjdHMiLCJjdXJyZW50U3RvcmVTYWxlcyIsImFkZFByb2R1Y3QiLCJwcm9kdWN0RGF0YSIsInJlcyIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwic3VjY2VzcyIsInVwZGF0ZVByb2R1Y3QiLCJkZWxldGVQcm9kdWN0IiwiYWRkQ3VzdG9tZXIiLCJjdXN0b21lckRhdGEiLCJ1cGRhdGVDdXN0b21lciIsInJlY29yZFNhbGUiLCJzYWxlRGF0YSIsInNhbGUiLCJ1cGRhdGVDdXJyZW50U3RvcmUiLCJzdG9yZURhdGEiLCJ1cGRhdGVkU3RvcmUiLCJQcm92aWRlciIsInZhbHVlIiwiYWxsUHJvZHVjdHMiLCJhbGxTYWxlcyIsInJlbG9hZERhdGEiLCJ1c2VBcHAiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/contexts/AppContext.jsx\n"));

/***/ })

});