generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  id        String   @id @default(cuid())
  code      String   @unique
  name      String
  currency  String   @default("FCFA")
  taxRate   Float    @default(18)
  createdAt DateTime @default(now())
  
  products  Product[]
  sales     Sale[]
}

model Product {
  id           String   @id @default(cuid())
  storeId      String
  barcode      String?
  name         String
  category     String
  costPrice    Float
  sellingPrice Float
  stock        Int      @default(0)
  createdAt    DateTime @default(now())
  
  store        Store    @relation(fields: [storeId], references: [id])
}

model Sale {
  id            String   @id @default(cuid())
  storeId       String
  receiptNumber String   @unique
  total         Float
  subtotal      Float    @default(0)
  tax           Float    @default(0)
  discount      Float    @default(0)
  paymentMethod String
  cashReceived  Float?
  change        Float?
  customerId    String?
  cashier       String   @default("Admin")
  createdAt     DateTime @default(now())
  
  store         Store      @relation(fields: [storeId], references: [id])
  items         SaleItem[]
}

model SaleItem {
  id          String   @id @default(cuid())
  saleId      String
  productId   String
  productName String
  quantity    Int
  unitPrice   Float
  total       Float
  
  sale        Sale     @relation(fields: [saleId], references: [id])
}
model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String?
  email     String?
  createdAt DateTime @default(now())
}
model Credit {
  id              String   @id @default(cuid())
  customerId      String
  amount          Float
  remainingAmount Float
  description     String?
  dueDate         DateTime
  status          String   @default("pending") // pending, partial, paid
  createdAt       DateTime @default(now())
}
model Return {
  id          String   @id @default(cuid())
  saleId      String
  reason      String
  amount      Float
  refundMethod String  // cash, card, credit
  processedBy String   @default("Admin")
  createdAt   DateTime @default(now())
  items       ReturnItem[]
}

model ReturnItem {
  id          String   @id @default(cuid())
  returnId    String
  productId   String
  productName String
  quantity    Int
  unitPrice   Float
  total       Float
  
  return      Return   @relation(fields: [returnId], references: [id])
}
